% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/keyboardsimulator.R
\name{is_equal_matrix}
\alias{is_equal_matrix}
\alias{locate_image_cpp}
\alias{image2gray_matrix}
\alias{locate_image}
\title{Search needle image in haystack image and locate needle position.}
\usage{
is_equal_matrix(mt_1, mt_2)

locate_image_cpp(ndl_mt, hay_mt)

image2gray_matrix(img)

locate_image(needle_image, center = TRUE)
}
\arguments{
\item{mt_1, mt_2}{A matrix of image data.}

\item{ndl_mt, hay_mt}{A matrix with grayscale x-y position.}

\item{img}{A cimg object.}

\item{needle_image}{A string of image file path or
a "cimg" class object of imager library.}

\item{center}{A logical. TRUE returns center position of needle_image.}
}
\value{
A logical.

x-y position of needle image.

\if{html}{\out{<div class="sourceCode">}}\preformatted{ A two (x-y) dimensional matrix.
}\if{html}{\out{</div>}}

An integer vector (x-y) of image location.
}
\description{
Search needle image in haystack image and locate needle position.

Comvert cimg class into grayscale x-y matrix.
Use grayscale to Speed up and to simplify code.

Locate needle image position.
}
\examples{
library(imager)
\dontrun{
sc <- imager::load.image(screenshot())
w <- 100
h <- 80
pos_x <- 0
pos_y <- imager::height(sc) - h
needle <- hay2needle(sc, pos_x, pos_y, w, h)
(locate_image(needle))
pos <- locate_image(needle, center = FALSE)

found <- hay2needle(sc, pos[1], pos[2], w, h)
layout(c(1:3))
plot(sc)
plot(needle)
plot(found)
}

}
